name: validate & release to artifacthub

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: validate helm
    strategy:
      matrix:
        version: ["1.33.1", "1.32.0", "1.31"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Get changed chart
        run: |
          echo "CHANGED_CHART=$(git diff-tree --no-commit-id --name-only --diff-filter=ACMRT -r main -- '*Chart.yaml' | sed '$s/$//')" >> $GITHUB_ENV
        id: changed_file

  release:
    name: sign & release helm charts
    runs-on: ubuntu-latest
    needs: test
    env:
      GNUPGHOME: /home/runner/.gnupg

    steps:
      - name: Checkout source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Import GPG key
        run: |
          mkdir -p "$GNUPGHOME"
          chmod 700 "$GNUPGHOME"

          echo "${{ secrets.HELM_GPG_PRIVATE_KEY }}" | gpg --batch --import

          echo "allow-loopback-pinentry" >> "$GNUPGHOME/gpg-agent.conf"
          echo "pinentry-mode loopback" >> "$GNUPGHOME/gpg.conf"

          echo "${{ secrets.HELM_GPG_KEY_ID }}:6:" | gpg --import-ownertrust

      - name: Verify GPG key is usable
        run: gpg --list-secret-keys --keyid-format LONG

      - name: Package and GPG-sign Helm charts manually
        run: |
          mkdir -p .cr-release-packages
          for chart in charts/*; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Processing chart: $chart"
              helm dependency update "$chart"
              helm package "$chart" --destination .cr-release-packages

              # Safely find .tgz file
              tgz_file=$(find .cr-release-packages -maxdepth 1 -type f -name "$(basename "$chart")-*.tgz" | head -n1)

              if [ -n "$tgz_file" ] && [ -f "$tgz_file" ]; then
                echo "Signing $(basename "$tgz_file")..."
                gpg --armor --output "$tgz_file.prov" \
                    --detach-sign "$tgz_file"
              else
                echo "❌ Skipping signing for $chart — .tgz package not found."
              fi
            fi
          done



      - name: Show signed package contents
        run: ls -lh .cr-release-packages/

      - name: Push chart repo to gh-pages
        run: |
          mkdir gh-pages-work
          cp .cr-release-packages/* gh-pages-work/
          cp pgp-public.key gh-pages-work/

          cd gh-pages-work
          git init
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/loeken/helm-charts.git

          git fetch origin gh-pages || echo "no existing gh-pages"
          git checkout gh-pages || git checkout -b gh-pages

          helm repo index . --url https://loeken.github.io/helm-charts

          git add .
          git commit -m "Publish signed charts and index" || echo "nothing to commit"
          git pull origin gh-pages --rebase || echo "Nothing to rebase"
          git push origin gh-pages